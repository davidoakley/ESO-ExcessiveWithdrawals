---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by david.
--- DateTime: 25/04/2025 19:25
---


function ExcessiveWithdrawals:GetGuilds()
	guilds = {}
	guilds[1] = "-"
	if GetNumGuilds() > 0 then
		for guild = 1, GetNumGuilds() do
			local guildId = GetGuildId(guild)
			local guildName = GetGuildName(guildId)
			if not guildName or (guildName):len() < 1 then
				guildName = "Guild " .. guildId
			end
			guilds[guild] = guildName
		end
	end
	d("GUILDs: "..#guilds)
	return guilds
end

function ExcessiveWithdrawals:GetGuild(gName)
	guilds = {}
	guilds[1] = "-"
	if GetNumGuilds() > 0 then
		for guild = 1, GetNumGuilds() do
			local guildId = GetGuildId(guild)
			local guildName = GetGuildName(guildId)
			if not guildName or (guildName):len() < 1 then
				guildName = "Guild " .. guildId
			end
			if gName == guildName then
				return guildId
			end
		end
	end
	return false
end

function ExcessiveWithdrawals:CheckGuildRank(guildID, rank)
	local users = {}
	if rank == nil or rank == "-" then rank = 0 end
	local memberCount = GetNumGuildMembers(guildID)
	d("ExcessiveWithdrawals:CheckGuildRank: guild '"..guildID.."' has "..memberCount.." members")
	if memberCount ~= 0 then
		for mIndex=1, memberCount, 1 do
			local cName, _, cRank, _, _ = GetGuildMemberInfo(guildID, mIndex)
			if cName ~= nil then
				if cRank <= rank then
					users[string.lower(cName)] = true
				else
					users[string.lower(cName)] = false
				end
			end
		end
	end
	ExcessiveWithdrawals.users = users
	return users
end

function ExcessiveWithdrawals:GetPrice(item)
	local price = 0
	if item == "gold" then
		price = 1
	else
		if MasterMerchant ~= nil then
			local itemStats = MasterMerchant:itemStats(item, true)
			price = itemStats.avgPrice
		end
		if TamrielTradeCentrePrice ~= nil and (MasterMerchant == nil or price == nil) then
			local priceInfo = TamrielTradeCentrePrice:GetPriceInfo(item)
			if priceInfo ~= nil then
				if priceInfo.SuggestedPrice ~= nil then
					price = priceInfo.SuggestedPrice
				elseif priceInfo.Avg ~= nil then
					price = priceInfo.Avg
				else
					price = 0
				end
			else
				price = 0
			end
		end
		if price == nil or price == 0 then
			_, price, _, _, _ = GetItemLinkInfo(item)
		else
			price = zo_round(price * 100)
			price = price / 100
		end
	end
	return price
end
