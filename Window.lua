---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by david.
--- DateTime: 30/04/2025 13:10
---
local Window = ExcessiveWithdrawals.window
local GetColorDefForValue = ExcessiveWithdrawals.GetColorDefForValue
local fmtnum = ExcessiveWithdrawals.fmtnum

function Window:Init()
	self.guildId = ExcessiveWithdrawals.db.guildId
	ZO_ScrollList_AddDataType(self.userListCtrl, 0, "EWWindow_UserRow", 35, function(...) self:LayoutRow(...) end, nil, nil, nil)
end

function Window:Open()
	self:SetHidden(false)

	self.titleLabel:SetText("Excessive Withdrawals - " .. GetGuildName(ExcessiveWithdrawals.db.guildId))

	self:UpdateData()

	if not not ExcessiveWithdrawals.db.guilds or not ExcessiveWithdrawals.db.guilds[self.guildId] or #ExcessiveWithdrawals.db.guilds[self.guildId].lastEvent == 0 then
		ExcessiveWithdrawals:MonitorGuild()
	end

	EVENT_MANAGER:RegisterForUpdate(ExcessiveWithdrawals.addonName.."Window", 1000, function() ExcessiveWithdrawals.window:UpdateData() end)
end

function Window:Close()
	self:SetHidden(true)
	EVENT_MANAGER:UnregisterForUpdate(ExcessiveWithdrawals.addonName.."Window")
end

function Window:UpdateData()
	if not ExcessiveWithdrawals.db.guilds or not ExcessiveWithdrawals.db.guilds[self.guildId] then return end
	local currentLastEventTotal = ExcessiveWithdrawals.db.guilds[self.guildId].lastEvent[1] + ExcessiveWithdrawals.db.guilds[self.guildId].lastEvent[2]

	if currentLastEventTotal == self.lastLastEventTotal then
		return -- No data has arrived since the last update
	end

	ZO_ScrollList_Clear(self.userListCtrl)
	local scrollData = ZO_ScrollList_GetDataList(self.userListCtrl)

	local results = ExcessiveWithdrawals:AnalyzeUsers(ExcessiveWithdrawals.db.guildId)

	for i = 1, #results do
		local entry = ZO_ScrollList_CreateDataEntry(0, results[i])
		table.insert(scrollData, entry)
	end

	ZO_ScrollList_Commit(self.userListCtrl)
	self.lastLastEventTotal = currentLastEventTotal
end

function Window:OnUserSubmitted(editBox)
	local userName = editBox:GetText()
	if userName:sub(1, 1) ~= "@" then userName = "@" .. userName end
	if ExcessiveWithdrawals:CheckData(userName) == false then return true end
	ExcessiveWithdrawals.userWindow:Open(ExcessiveWithdrawals.db.guildId, userName)
end

function Window:LayoutRow(rowCtrl, data, _)
	local rankIcon = zo_iconFormatInheritColor(GetFinalGuildRankTextureSmall(data.guildId, data.rankIndex), 32, 32)
	local colour = data.member and ZO_DEFAULT_ENABLED_COLOR or ZO_DEFAULT_DISABLED_COLOR
	local colourOverride = not data.member and ZO_ColorDef:New("999999")
	local rankColour = ExcessiveWithdrawals.GetColorDefForRank(data.rankIndex)

	local name = "|c"..(colourOverride or rankColour):ToHex()..rankIcon .. "|r" .. data.userName

	rowCtrl.nameLabel:SetText(name or "-")
	rowCtrl.addedLabel:SetText(fmtnum(data.itemsDepositVal) or "-")
	rowCtrl.removedLabel:SetText(fmtnum(data.itemsWithdrawVal) or "-")
	local cashDonated = data.goldDeposit - data.goldWithdraw
	rowCtrl.donatedLabel:SetText(fmtnum(cashDonated) or "-")
	rowCtrl.balanceLabel:SetText((fmtnum(data.balance)) or "-")

	rowCtrl.nameLabel:SetColor((colourOverride or ZO_DEFAULT_ENABLED_COLOR):UnpackRGBA())
	rowCtrl.addedLabel:SetColor((colourOverride or GetColorDefForValue(1)):UnpackRGBA())
	rowCtrl.removedLabel:SetColor((colourOverride or GetColorDefForValue(-1)):UnpackRGBA())
	rowCtrl.donatedLabel:SetColor((colourOverride or GetColorDefForValue(1)):UnpackRGBA())
	rowCtrl.balanceLabel:SetColor((colourOverride or GetColorDefForValue(data.balance)):UnpackRGBA())
end
