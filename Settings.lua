---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by david.
--- DateTime: 22/04/2025 19:14
---


function ExcessiveWithdrawals:Menu()
	local LAM2 = LibStub:GetLibrary("LibAddonMenu-2.0")

	local panelData = {
		type = "panel",
		name = self.addonName,
		displayName = self.displayName,
		author = "depeshmood, SirNightstorm",
		version = "25.1.0b1",
		slashCommand = "/exwithdraw",
		registerForRefresh = true,
		registerForDefaults = true,
	}

	local rankChoices = { '-' }
	local rankValues = { '-' }
	local numRanks = GetNumGuildRanks(self.db.guildId)
	for i = 1, numRanks do
		table.insert(rankChoices, GetGuildRankCustomName(self.db.guildId, i))
		table.insert(rankValues, i)
	end

	local demoteChoices = { }
	local demoteValues = { }
	for i = 3, numRanks do
		table.insert(demoteChoices, GetGuildRankCustomName(self.db.guildId, i))
		table.insert(demoteValues, i)
	end

	LAM2:RegisterAddonPanel(self.name .. "LAM2Options", panelData)
	local optionsTable = {
		{
			type = "header",
			name = "Guild Information",
			width = "full",
		},
		{
			type = "dropdown",
			name = "Guild",
			tooltip = "This is the guild that you would like to use to scan.",
			choices = self:GetGuildNames(),
			choicesValues = self:GetGuildIds(),
			default = "-",
			getFunc = function() return self.db.guildId end,
			setFunc = function(choice)
				self.db.guildId = choice
				d("Guild "..self.db.guildId)
			end,
			requiresReload = true
		},
		{
			type = "dropdown",
			name = "Exclude Guild Rank(s)     #",
			tooltip = "The guild rank(s) to exclude, in the order they appear in the guild pane, and above.\n1 = Guild Master",
			choices = rankChoices,
			choicesValues = rankValues,
			--choices = {"-", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10},
			default = "-",
			getFunc = function() return self.db.guildRank end,
			setFunc = function(choice) self.db.guildRank = choice end
		},
		{
			type = "editbox",
			name = "Ignore up to                       $",
			tooltip = "Once the amount withdrawn exceeds this amount, you will begin to receive notifications per username.",
			width = "full",
			default = self.defaults.ignoreAmt,
			getFunc = function() return self.db.ignoreAmt end,
			setFunc = function(choice) self.db.ignoreAmt = choice end,
		},
		{
			type = "button",
			name = "Monitor Guild",
			tooltip = "This will start the addon for monitoring the guild bank's history, but only needs to be used after configuring the information above or to see any warnings.",
			width = "half",
			func = function() self:MonitorGuild() end
		},
		{
			type = "button",
			name = "List Disabled",
			tooltip = "This will list all usernames and guild bank total value, for gold/items deposited and withdrawn, that have their notifications disabled.",
			width = "half",
			func = function() self:ShowDisabled(false) end
		},
		{
			type = "header",
			name = "Automated Demotions (optional)",
			width = "full",
		},
		{
			type = "editbox",
			name = "Ignore up to                       $",
			tooltip = "Once the amount withdrawn exceeds this amount the user will automatically be demoted, while excluding the guild rank(s) specified above.",
			width = "full",
			default = 5000,
			getFunc = function() return self.db.demoteAmt end,
			setFunc = function(choice) self.db.demoteAmt = choice end,
		},
		{
			type = "dropdown",
			name = "New Guild Rank               #",
			tooltip = "The guild rank that you would like to demote players to that exceed the above amount. This should be a rank that does not have guild bank withdrawal permissions.",
			choices = demoteChoices,
			choicesValues = demoteValues,
			default = numRanks,
			getFunc = function() return self.db.demoteRank end,
			setFunc = function(choice) self.db.demoteRank = choice end
		},
		{
			type = "header",
			name = "Member Management",
			width = "full",
		},
		{
			type = "editbox",
			name = "Username, including \"@\"",
			tooltip = "This is the guild member's username that you would like to manage.",
			width = "full",
			default = self.defaults.gUser,
			getFunc = function() return self.db.gUser end,
			setFunc = function(choice) self.db.gUser = choice end,
		},
		{
			type = "button",
			name = "Disable",
			tooltip = "This will disable all notifications for this user, until they do another guild bank transaction.",
			width = "half",
			func = function() self:Commands("ignore", self.db.gUser) end
		},
		{
			type = "button",
			name = "History",
			tooltip = "View the guild member's guild bank history.",
			width = "half",
			func = function() self:Commands("history", self.db.gUser) end
		},
		{
			type = "button",
			name = "Remove",
			tooltip = "This will remove the above username from the database for " .. self.displayName .. ", until they make new guild bank transactions.",
			width = "half",
			func = function() self:Commands("remove", self.db.gUser) end
		},
		{
			type = "button",
			name = "Enable",
			tooltip = "This will enable all chat window notifications for this user.",
			width = "half",
			func = function() self:Commands("enable", self.db.gUser) end
		},
		{
			type = "header",
			name = "Addon Settings",
			width = "full",
		},
		--{
		--	type = "slider",
		--	name = "Scan Every ... minute(s)",
		--	tooltip = "This allows you to change the duration of time between each scan and notification(s).",
		--	width = "full",
		--	min = 1,
		--	max = 60,
		--	default = 10,
		--	getFunc = function() return self.db.delay end,
		--	setFunc = function(value)
		--		self.db.delay = value
		--		if tonumber(value) ~= nil then
		--			EVENT_MANAGER:UnregisterForUpdate(self.name)
		--			EVENT_MANAGER:RegisterForUpdate(self.name, tonumber(value) * 60000, function() ExcessiveWithdrawals:MonitorGuild() end)
		--		end
		--	end
		--},
		{
			type = "checkbox",
			name = "Disable Warnings",
			tooltip = "This will disable the warning and/or error messages when pricing addons, Master Merchant and Tamriel Trade Centre, are not found and/or enabled.",
			width = "half",
			getFunc = function() return self.db.warnings end,
			setFunc = function(value) self.db.warnings = value end
		},
		{
			type = "checkbox",
			name = "Log events",
			tooltip = "This will log in chat when any user event occurs - will cause a log of output on the initial scan!",
			width = "half",
			getFunc = function() return self.db.logging end,
			setFunc = function(value) self.db.logging = value end
		},
		{
			type = "button",
			name = "Reset All",
			tooltip = "This will reset and clear any and/or all guild data currently stored in " .. self.displayName .. ". (see warning below)",
			width = "half",
			func = function() self:Commands("reset", "history") end
		},
		{
			type = "button",
			name = "Reset Guild",
			tooltip = "This will clear all data for the currently selected guild. (see warning below)",
			width = "half",
			func = function() self:Commands("reset", self.db.guildId) end
		},
		{
			type = "header",
			name = "Chat Commands",
			width = "full",
		},
		{
			type = "description",
			text = [[
To open this menu, type: /exwithdraw

List users with excessive withdrawals: /excessive list

User's History: /excessive history @USERNAME
Disable notifications: /excessive ignore @USERNAME
               (auto-enabled upon deposit/withdrawal)
Enable notifications: /excessive enable @USERNAME
Remove history: /excessive remove @USERNAME

List users with disabled notifications: /excessive history all
               (configured guild members only)

Reset guild history: /excessive reset GUILD_NUMBER
Reset all history: /excessive reset history

Slash commands can sometimes cause the UI to become unresponsive.
Type "/reloadui" to reset your user interface and resolve the issue.]]
		}
	}
	LAM2:RegisterOptionControls(self.name .. "LAM2Options", optionsTable)
end
